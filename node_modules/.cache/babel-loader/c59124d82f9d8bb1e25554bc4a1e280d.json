{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Downloads\\\\Cloud-Integration-Project-main\\\\Cloud-Integration-Project-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: 36.8390646,\n  lng: 10.8261700\n};\nfunction MyComponent() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDK-mKtXFbRMIxStNJ94WJZspUD95W04mI\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" You can find here My Localisation\", /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Marker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","Marker","useJsApiLoader","containerStyle","width","height","center","lat","lng","MyComponent","isLoaded","id","googleMapsApiKey","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"sources":["C:/Users/asus/Downloads/Cloud-Integration-Project-main/Cloud-Integration-Project-main/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat:36.8390646,\n  lng: 10.8261700\n};\n\nfunction MyComponent() {\n\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDK-mKtXFbRMIxStNJ94WJZspUD95W04mI\"\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n    <h1> You can find here My Localisation \n         <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n        <Marker position={center}/>\n      </GoogleMap>\n      </h1>\n  ) : <></>\n  \n}\n\nexport default React.memo(MyComponent)\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,SAAS,EAAEC,MAAM,EAAEC,cAAc,QAAQ,wBAAwB;AAAC;AAAA;AAE3E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAC,UAAU;EACdC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,WAAW,GAAG;EAAA;EAErB,MAAM;IAAEC;EAAS,CAAC,GAAGR,cAAc,CAAC;IAClCS,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAGjB,KAAK,CAACkB,WAAW,CAAC,SAASC,QAAQ,CAACL,GAAG,EAAE;IACtD,MAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACjB,MAAM,CAAC;IAC1DO,GAAG,CAACW,SAAS,CAACL,MAAM,CAAC;IACrBL,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAG1B,KAAK,CAACkB,WAAW,CAAC,SAASC,QAAQ,CAACL,GAAG,EAAE;IACzDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,QAAQ,gBACb;IAAA,8DACK,QAAC,SAAS;MACX,iBAAiB,EAAEP,cAAe;MAClC,MAAM,EAAEG,MAAO;MACf,IAAI,EAAE,EAAG;MACT,MAAM,EAAEU,MAAO;MACf,SAAS,EAAES,SAAU;MAAA,wBAGrB,qCAAK,eACL,QAAC,MAAM;QAAC,QAAQ,EAAEnB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACP,gBACL,qCAAK;AAEX;AAAC,GAnCQG,WAAW;EAAA,QAEGP,cAAc;AAAA;AAAA,KAF5BO,WAAW;AAqCpB,kCAAeV,KAAK,CAAC2B,IAAI,CAACjB,WAAW,CAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}